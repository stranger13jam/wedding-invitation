import os
from pathlib import Path
import textwrap
import uuid


db_config = {
      "host": os.getenv("POSTGRES_HOST"), # for production
      "port": os.getenv("POSTGRES_PORT"),
      "dbname": os.getenv("POSTGRES_DB"),
      "user": os.getenv("POSTGRES_USER"),
      "password": os.getenv("POSTGRES_PASSWORD"),
}

secrets = [
      # f"admin_token = '{uuid.uuid4().hex}'",
      # 'admin = "227083ec450043f7890b5dce066acd6c"',
      textwrap.dedent(f"""
            [constants.token]
            admin = "{uuid.uuid4().hex}"
      """).strip(),
      textwrap.dedent(f"""
            [constants.role]
            admin = "admin"
            guest = "guest"
      """).strip(),
      textwrap.dedent(f"""
            [connections.postgresql]
            dialect = "postgresql"
            host = "{db_config['host']}"
            port = "{db_config['port']}"
            database = "{db_config['dbname']}"
            username = "{db_config['user']}"
            password = "{db_config['password']}"
      """).strip()
]

def generate_secrets(output_path=".streamlit/secrets.toml"):
      secrets_path = Path(output_path)
      secrets_path.parent.mkdir(parents=True, exist_ok=True)

      with open(secrets_path, "w", encoding="utf-8") as f:
            f.write("\n\n".join(secrets))

      print(f"âœ… secrets.toml generated by {output_path}")


if __name__ == "__main__":
      generate_secrets()